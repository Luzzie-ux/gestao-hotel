"""
M√≥dulo de gest√£o de quartos
Fun√ß√µes para adicionar, listar e gerir quartos do hotel
"""

# Base de dados de quartos (simulada com lista)
quartos = []

def adicionar_quarto(numero, tipo, preco):
    """
    Adiciona um novo quarto ao sistema
    
    Args:
        numero (str): N√∫mero do quarto
        tipo (str): Tipo do quarto (Single, Double, Suite)
        preco (float): Pre√ßo por noite
    
    Returns:
        dict: Dados do quarto adicionado
    """
    # Verificar se o quarto j√° existe
    if buscar_quarto(numero):
        print(f"‚ùå Quarto {numero} j√° existe!")
        return None
    
    quarto = {
        "numero": numero,
        "tipo": tipo,
        "preco": preco,
        "status": "dispon√≠vel"
    }
    
    quartos.append(quarto)
    print(f"‚úÖ Quarto {numero} ({tipo}) adicionado com sucesso!")
    return quarto

def listar_quartos(filtro_status=None):
    """
    Lista todos os quartos do hotel
    
    Args:
        filtro_status (str, optional): Filtrar por status (dispon√≠vel/ocupado)
    """
    quartos_filtrados = quartos
    
    if filtro_status:
        quartos_filtrados = [q for q in quartos if q["status"] == filtro_status]
    
    if not quartos_filtrados:
        print("‚ö†Ô∏è  Nenhum quarto encontrado.")
        return
    
    print("\n" + "="*70)
    print(f"{'N√∫mero':<10} {'Tipo':<15} {'Pre√ßo/Noite':<15} {'Status':<15}")
    print("="*70)
    
    for quarto in quartos_filtrados:
        status_icon = "üü¢" if quarto["status"] == "dispon√≠vel" else "üî¥"
        print(f"{quarto['numero']:<10} {quarto['tipo']:<15} ‚Ç¨{quarto['preco']:<14.2f} {status_icon} {quarto['status']:<13}")
    
    print("="*70)
    print(f"Total de quartos: {len(quartos_filtrados)}")
    
    # Estat√≠sticas
    disponiveis = len([q for q in quartos if q["status"] == "dispon√≠vel"])
    ocupados = len([q for q in quartos if q["status"] == "ocupado"])
    print(f"Dispon√≠veis: {disponiveis} | Ocupados: {ocupados}")

def buscar_quarto(numero):
    """
    Busca um quarto pelo n√∫mero
    
    Args:
        numero (str): N√∫mero do quarto
    
    Returns:
        dict ou None: Dados do quarto ou None se n√£o encontrado
    """
    for quarto in quartos:
        if quarto["numero"] == numero:
            return quarto
    return None

def atualizar_status_quarto(numero, novo_status):
    """
    Atualiza o status de um quarto
    
    Args:
        numero (str): N√∫mero do quarto
        novo_status (str): Novo status (dispon√≠vel/ocupado)
    
    Returns:
        bool: True se atualizado, False caso contr√°rio
    """
    if novo_status not in ["dispon√≠vel", "ocupado"]:
        print("‚ùå Status inv√°lido! Use 'dispon√≠vel' ou 'ocupado'.")
        return False
    
    quarto = buscar_quarto(numero)
    if quarto:
        quarto["status"] = novo_status
        print(f"‚úÖ Status do quarto {numero} atualizado para '{novo_status}'!")
        return True
    else:
        print(f"‚ùå Quarto {numero} n√£o encontrado!")
        return False

def verificar_disponibilidade(numero):
    """
    Verifica se um quarto est√° dispon√≠vel
    
    Args:
        numero (str): N√∫mero do quarto
    
    Returns:
        bool: True se dispon√≠vel, False caso contr√°rio
    """
    quarto = buscar_quarto(numero)
    return quarto and quarto["status"] == "dispon√≠vel"